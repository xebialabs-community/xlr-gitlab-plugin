<?xml version='1.0' encoding='UTF-8'?>
<!--


    Copyright 2021 XEBIALABS

    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

-->
<synthetic xmlns="http://www.xebialabs.com/deployit/synthetic" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.xebialabs.com/deployit/synthetic synthetic.xsd">
  <!-- Server Configurations -->
  <type type="gitlab.Server" extends="configuration.HttpConnection" label="GitLab: Server">
    <property name="api_key" required="true" password="true" label="API Token" description="A personal access token for the GitLab API.  Token scopes should be set based on the desired orchestration."/>
  </type>
  <!-- Tasks -->
  <type type="gitlab.Task" extends="xlrelease.PythonScript" virtual="true">
    <property name="scriptLocation" hidden="true" default="gitlab/Task.py"/>
    <property name="iconLocation" hidden="true" default="gitlab/gitlab.png"/>
    <property name="taskColor" hidden="true" default="#6B4FBB"/>
    <property name="gitlab_server" category="input" kind="ci" referenced-type="gitlab.Server" label="GitLab Server"/>
    <property name="api_key" category="input" required="false" password="true" label="API Key" description="Optionally, override the GitLab Server configuration API token."/>
  </type>
  <type type="gitlab.AcceptMergeRequest" extends="gitlab.Task" label="GitLab: Accept Merge Request">
    <property name="project_id" category="input" label="Project ID" description="This is visible in the GUI and should be an integer"/>
    <property name="merge_id" category="input" label="Merge ID" description="This is visible in the GUI and should be an integer"/>
  </type>
  <type type="gitlab.CreateBranch" extends="gitlab.Task" label="GitLab: Create Branch">
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
    <property name="branch" category="input" required="true" label="New Branch Name"/>
    <property name="ref" category="input" required="true" label="Reference" description="Branch name or commit hash to the create branch from"/>
    <property name="commit_id" category="output" label="Commit Source" description="Commit hash used to generate the new branch"/>
  </type>
  <type type="gitlab.CreateGroup" extends="gitlab.Task" label="GitLab: Create Group">
    <property name="group_name" category="input" required="true" label="Group Name"/>
    <property name="path" category="input" required="true" label="Group Path"/>
    <property name="description" category="input" kind="string" required="false" size="large" label="Group Description"/>
    <property name="visibility" category="input" kind="enum" required="true" label="Group Visibility">
      <enum-values>
        <value label="Public">public</value>
        <value label="Internal">internal</value>
        <value label="Private">private</value>
      </enum-values>
    </property>
    <property name="parent_id" category="input" label="Parent ID" required="false" description="Optionally, include a parent group ID for creating a nested group"/>
    <property name="group_id" category="output" label="Group ID"/>
  </type>
  <type type="gitlab.CreateMergeRequest" extends="gitlab.Task" label="GitLab: Create Merge Request">
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
    <property name="source_branch" category="input" required="true" label="Source Branch"/>
    <property name="target_branch" category="input" required="true" label="Target Branch"/>
    <property name="title" category="input" required="true" label="Merge Request Title"/>
    <property name="target_project_id" category="input" required="false" label="Target Project ID"/>
    <property name="merge_id" category="output" label="Merge Request ID"/>
  </type>
  <type type="gitlab.CreateProject" extends="gitlab.Task" label="GitLab: Create Project">
    <property name="project_name" category="input" required="true" label="Project Name"/>
    <property name="path" category="input" required="true" label="Project Path"/>
    <property name="namespace" category="input" required="false" description="Namespace ID for the project.  This will default to the configuration user namespace if not provided"/>
    <property name="description" category="input" kind="string" required="false" size="large" label="Project Description"/>
    <property name="import_url" category="input" required="false" label="Import URL" description="Note: If your HTTP repository is not publicly accessible, then add authentication information to the URL (e.g. https://username:password@gitlab.company.com/group/project.git)"/>
    <property name="visibility" category="input" kind="enum" required="true" label="Project Visibility">
      <enum-values>
        <value label="Public">public</value>
        <value label="Internal">internal</value>
        <value label="Private">private</value>
      </enum-values>
    </property>
    <property name="project_id" category="output" label="Project ID"/>
  </type>
  <type type="gitlab.CreateProjectWebhook" extends="gitlab.Task" label="GitLab: Create Project Webhook">
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
    <property name="url" category="input" required="true" label="URL" description="The webhook URL"/>
    <property name="push_events" category="input" kind="boolean" required="false" label="Push Events" description="Trigger hook on push events"/>
    <property name="issues_events" category="input" kind="boolean" required="false" label="Issues Events" description="Trigger hook on issues events"/>
    <property name="confidential_issues_events" category="input" kind="boolean" required="false" label="Confidential Issues Events" description="Trigger hook on confidential issues events"/>
    <property name="merge_requests_events" category="input" kind="boolean" required="false" label="Merge Requests Events" description="Trigger hook on merge requests events"/>
    <property name="tag_push_events" category="input" kind="boolean" required="false" label="Tag Push Events" description="Trigger hook on tag push events"/>
    <property name="note_events" category="input" kind="boolean" required="false" label="Note Events" description="Trigger hook on note events"/>
    <property name="job_events" category="input" kind="boolean" required="false" label="Job Events" description="Trigger hook on job events"/>
    <property name="pipeline_events" category="input" kind="boolean" required="false" label="Pipeline Events" description="Trigger hook on pipeline events"/>
    <property name="wiki_page_events" category="input" kind="boolean" required="false" label="Wiki Page Events" description="Trigger hook on wiki events"/>
    <property name="enable_ssl_verification" category="input" kind="boolean" required="true" default="true" label="Verify SSL" description="Do SSL verification when triggering the hook"/>
    <property name="token" category="input" required="false" description="Secret token to validate received payloads"/>
    <property name="hook_id" category="output" label="Hook ID"/>
  </type>
  <type type="gitlab.CreateTag" extends="gitlab.Task" label="GitLab: Create Tag">
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
    <property name="ref" category="input" required="true" label="Reference" description="Commit hash, another tag name, or branch name from which to create the tag"/>
    <property name="tag_name" category="input" required="true" label="Tag Name"/>
    <property name="message" category="input" required="false" label="Message" description="An optional description for the tag"/>
    <property name="commit_id" category="output" label="Commit ID" description="The hash of the commit for the tag"/>
  </type>
  <type type="gitlab.QueryCommits" extends="gitlab.Task" label="GitLab: Query Commits">
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
    <property name="branch" category="input" required="false" label="Branch Name" description="If not provided, the default branch will be used"/>
    <property name="results_limit" category="input" kind="integer" required="true" default="100" label="Results Limit" description="Upper limit on the number of commits to return from the query"/>
    <property name="commits" category="output"/>
  </type>
  <type type="gitlab.QueryData" extends="gitlab.Task" label="GitLab: Query Data">
    <property name="endpoint" category="input" required="true" label="API Endpoint URI" description="URI for the API endpoint - for example /api/v4/projects/1/triggers.  Do not include URL parameters"/>
    <property name="path_spec" category="input" required="true" label="JSON Path" description="The JSON path expression for locating the value of interest"/>
    <property name="value" category="output" label="Value"/>
  </type>
  <type type="gitlab.QueryMergeRequests" extends="gitlab.Task" label="GitLab: Query Merge Requests">
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
    <property name="results_limit" category="input" kind="integer" required="true" default="100" label="Results Limit" description="Upper limit on the number of pull requests to return from the query."/>
    <property name="sorting" category="input" kind="enum" required="true" default="Creation Datetime Descending" label="Sorting" description="Approach for sorting query results">
      <enum-values>
        <value>Creation Datetime Descending</value>
        <value>Creation Datetime Ascending</value>
        <value>Last Update Datetime Descending</value>
        <value>Last Update Datetime Ascending</value>
      </enum-values>
    </property>
    <property name="simple_view" category="input" kind="boolean" required="true" default="false" label="Simple View" description="If simple view is enabled, only the iid, URL, title, description, and basic state of the merge request are extracted."/>
    <property name="source_branch" category="input" required="false" label="Source Branch" description="If a merge request source branch is provided, only matching merge requests will be returned.  For the value, provide a branch name, such as &quot;master&quot;."/>
    <property name="target_branch" category="input" required="false" label="Target Branch" description="If a merge request target branch is provided, only matching merge requests will be returned.  For the value, provide a branch name, such as &quot;master&quot;."/>
    <property name="milestone" category="input" required="false" label="Milestone" description="Filter results by milestone.  For the value, provide a specific milestone, the value &quot;Any&quot;, or the value &quot;None&quot;."/>
    <property name="state" category="input" kind="enum" required="true" default="all">
      <enum-values>
        <value label="Opened">opened</value>
        <value label="Closed">closed</value>
        <value label="Merged">merged</value>
        <value label="Locked">locked</value>
        <value label="All">all</value>
      </enum-values>
    </property>
    <property name="merge_requests" category="output" label="Merge Requests"/>
  </type>
  <type type="gitlab.QueryPipelines" extends="gitlab.Task" label="GitLab: Query Pipelines">
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
    <property name="pipelines" category="output"/>
  </type>
  <type type="gitlab.QueryProject" extends="gitlab.Task" label="GitLab: Query Project">
    <property name="project_name" category="input" required="true" label="Project Name"/>
    <property name="namespace" category="input" required="false" label="Namespace"/>
    <property name="project_id" category="output" label="Project ID"/>
  </type>
  <type type="gitlab.QuerySecureData" extends="gitlab.Task" label="GitLab: Query Secure Data">
    <property name="endpoint" category="input" required="true" label="API Endpoint URI" description="URI for the API endpoint - for example /api/v4/projects/1/triggers.  Do not include URL parameters."/>
    <property name="path_spec" category="input" required="true" label="JSON Path" description="The JSON path expression for locating the value of interest"/>
    <property name="value" category="output" password="true" label="Value"/>
  </type>
  <type type="gitlab.QueryTags" extends="gitlab.Task" label="GitLab: Query Tags">
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
    <property name="search" category="input" kind="string" required="false" description="Optionally, specify a search to filter what tags will be processed.  This uses the standard GitLab tags search criteria, so consult GitLab documentation on the syntax"/>
    <property name="results_limit" category="input" kind="integer" required="true" default="100" label="Results Limit" description="Upper limit on the number of tags to return from the query."/>
    <property name="tags" category="output"/>
  </type>
  <type type="gitlab.TriggerPipeline" extends="gitlab.Task" label="GitLab: Trigger Pipeline">
    <property name="scriptLocation" hidden="true" default="gitlab/pipeline.py"/>
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
    <property name="ref" category="input" required="true" description="Commit hash, tag name, or branch name from which to trigger the pipeline"/>
    <property name="token" category="input" required="true" password="true" description="The token for the pipeline trigger.  This is not the same as the GitLab API access token."/>
    <property name="variables" category="input" kind="map_string_string" required="false" description="Optionally, provide variables to the pipeline execution"/>
    <property name="pipeline_id" category="output" label="Pipeline ID"/>
    <property name="pipeline_status" category="output" label="Pipeline Status"/>
    <property name="pipeline_web_url" category="output" label="Pipeline Web URL"/>
  </type>
  <!-- Release Triggers -->
  <type type="gitlab.CommitTrigger" extends="xlrelease.ReleaseTrigger" label="GitLab: Commit Trigger" description="Listens to a GitLab repository for fresh code commits ">
    <property name="scriptLocation" hidden="true" default="gitlab/CommitTrigger.py"/>
    <!-- repository -->
    <property name="gitlab_server" category="Repository" kind="ci" referenced-type="gitlab.Server" label="GitLab Server"/>
    <property name="api_key" category="Repository" required="false" default="" label="API Key" description="Optionally, provide an API token to override the server configuration"/>
    <property name="project_id" category="Repository" kind="integer" required="true" label="Project ID" description="GitLab project to monitor - should be an integer"/>
    <property name="branchName" category="Repository" kind="string" required="false" description="Optionally, specify a branch name if only listening for commits on a single branch"/>
    <!-- output variables -->
    <property name="commitId" category="variables" required="false" description="Commit hash"/>
    <property name="branch" category="variables" required="false" description="Branch where the commit occurred"/>
  </type>
  <type type="gitlab.TagTrigger" extends="xlrelease.ReleaseTrigger" label="GitLab: Tag Trigger" description="Listens to a GitLab repository for new tags">
    <property name="scriptLocation" hidden="true" default="gitlab/TagTrigger.py"/>
    <!-- repository -->
    <property name="gitlab_server" category="Repository" kind="ci" referenced-type="gitlab.Server" label="GitLab Server"/>
    <property name="api_key" category="Repository" required="false" default="" label="API Key" description="Optionally, provide an API token to override the server configuration"/>
    <property name="project_id" category="Repository" kind="integer" required="true" label="Project ID" description="GitLab project to monitor - should be an integer"/>
    <property name="search" category="Repository" kind="string" required="false" description="Optionally, specify a search to filter what tags will be processed.  This uses the standard GitLab tags search criteria, so consult GitLab documentation on the syntax"/>
    <!-- output variables -->
    <property name="tagName" category="variables" required="false"/>
    <property name="tagMessage" category="variables" required="false"/>
    <property name="commitId" category="variables" required="false"/>
    <property name="commitTitle" category="variables" required="false"/>
    <property name="commitMessage" category="variables" required="false"/>
    <property name="commitAuthor" category="variables" required="false"/>
    <property name="commitCommitter" category="variables" required="false"/>
    <property name="commitCreationDatetime" category="variables" required="false"/>
    <property name="commitAuthoredDatetime" category="variables" required="false"/>
    <property name="commitCommittedDatetime" category="variables" required="false"/>
  </type>
  <!-- Tiles -->
  <type type="gitlab.CommitsTile" label="GitLab Commits Tile" extends="xlrelease.Tile" description="Display a list of the latest commits to a branch">
    <property name="supportedScopes" kind="list_of_string" hidden="true" default="release,folder,global"/>
    <property name="uri" hidden="true" default="commits-summary.html"/>
    <property name="detailsUri" hidden="true" default="commits-detail.html"/>
    <property name="title" default="GitLab Commits Summary" description="Tile title."/>
    <property name="gitlab_server" category="input" kind="ci" referenced-type="gitlab.Server" label="GitLab Server"/>
    <property name="api_key" category="input" required="false" label="API Key" description="Optionally, provide an API token to override the server configuration"/>
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
    <property name="branch" category="input" required="false" label="Branch Name" description="If not provided, the default branch will be used"/>
    <property name="results_limit" category="input" kind="integer" required="true" default="100" label="Results Limit" description="Upper limit on the number of pull requests to return from the query."/>
  </type>
  <type type="gitlab.ContributionsTile" label="GitLab Contributions Tile" extends="xlrelease.Tile" description="Display authors and committers for the latest commits">
    <property name="supportedScopes" kind="list_of_string" hidden="true" default="release,folder,global"/>
    <property name="uri" hidden="true" default="contributions-summary.html"/>
    <property name="detailsUri" hidden="true" default="commits-detail.html"/>
    <property name="title" default="GitLab Contributions Summary" description="Tile title."/>
    <property name="gitlab_server" category="input" kind="ci" referenced-type="gitlab.Server" label="GitLab Server"/>
    <property name="api_key" category="input" required="false" label="API Key" description="Optionally, provide an API token to override the server configuration"/>
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
    <property name="branch" category="input" required="false" label="Branch Name" description="If not provided, the default branch will be used"/>
    <property name="results_limit" category="input" kind="integer" required="true" default="100" label="Results Limit" description="Upper limit on the number of pull requests to return from the query."/>
  </type>
  <type type="gitlab.MergeRequestsTile" label="GitLab Merge Requests Tile" extends="xlrelease.Tile" description="Display the breakdown of merge request statuses">
    <property name="supportedScopes" kind="list_of_string" hidden="true" default="release,folder,global"/>
    <property name="uri" hidden="true" default="merge-requests-summary.html"/>
    <property name="detailsUri" hidden="true" default="merge-requests-detail.html"/>
    <property name="title" default="GitLab Merge Requests Summary" description="Tile title."/>
    <property name="gitlab_server" category="input" kind="ci" referenced-type="gitlab.Server" label="GitLab Server"/>
    <property name="api_key" category="input" required="false" label="API Key" description="Optionally, provide an API token to override the server configuration"/>
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
    <property name="results_limit" category="input" kind="integer" required="true" default="100" label="Results Limit" description="Upper limit on the number of pull requests to return from the query."/>
    <property name="sorting" category="input" kind="enum" required="true" hidden="true" default="Creation Datetime Descending" label="Sorting" description="Approach for sorting query results">
      <enum-values>
        <value>Creation Datetime Descending</value>
        <value>Creation Datetime Ascending</value>
        <value>Last Update Datetime Descending</value>
        <value>Last Update Datetime Ascending</value>
      </enum-values>
    </property>
    <property name="simple_view" category="input" kind="boolean" required="true" hidden="true" default="false" label="Simple View" description="If simple view is enabled, only the iid, URL, title, description, and basic state of the merge request are extracted."/>
    <property name="source_branch" category="input" required="false" label="Source Branch" description="If a merge request source branch is provided, only matching merge requests will be returned.  For the value, provide a branch name, such as &quot;master&quot;."/>
    <property name="target_branch" category="input" required="false" label="Target Branch" description="If a merge request target branch is provided, only matching merge requests will be returned.  For the value, provide a branch name, such as &quot;master&quot;."/>
    <property name="milestone" category="input" required="false" hidden="true" default="" label="Milestone"/>
    <property name="state" category="input" kind="enum" required="true" hidden="true" default="all">
      <enum-values>
        <value label="Opened">opened</value>
        <value label="Closed">closed</value>
        <value label="Merged">merged</value>
        <value label="Locked">locked</value>
        <value label="All">all</value>
      </enum-values>
    </property>
  </type>
  <type type="gitlab.PipelinesTile" label="GitLab Pipelines Tile" extends="xlrelease.Tile" description="Display a list of the latest pipeline executions, including status information and a direct link">
    <property name="supportedScopes" kind="list_of_string" hidden="true" default="release,folder,global"/>
    <property name="uri" hidden="true" default="pipelines-summary.html"/>
    <property name="detailsUri" hidden="true" default="pipelines-detail.html"/>
    <property name="title" default="GitLab Pipelines Summary" description="Tile title."/>
    <property name="gitlab_server" category="input" kind="ci" referenced-type="gitlab.Server" label="GitLab Server"/>
    <property name="api_key" category="input" required="false" label="API Key" description="Optionally, provide an API token to override the server configuration"/>
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
  </type>
  <type type="gitlab.PipelinesTimelineTile" label="GitLab Pipeline Trends" extends="xlrelease.Tile" description="Display the latest pipeline executions in a bar chart">
    <property name="supportedScopes" kind="list_of_string" hidden="true" default="release,folder,global"/>
    <property name="uri" hidden="true" default="pipelines-timeline-summary.html"/>
    <property name="title" default="GitLab Pipeline Trends" description="Tile title."/>
    <property name="gitlab_server" category="input" kind="ci" referenced-type="gitlab.Server" label="GitLab Server"/>
    <property name="api_key" category="input" required="false" label="API Key" description="Optionally, provide an API token to override the server configuration"/>
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
  </type>
  <type type="gitlab.TagsTimelineTile" label="GitLab Tags Timeline Tile" extends="xlrelease.Tile" description="Display a timeline of tags">
    <property name="supportedScopes" kind="list_of_string" hidden="true" default="release,folder,global"/>
    <property name="uri" hidden="true" default="tags-timeline-summary.html"/>
    <property name="detailsUri" hidden="true" default="tags-timeline-detail.html"/>
    <property name="title" default="GitLab Tags Timeline" description="Tile title."/>
    <property name="gitlab_server" category="input" kind="ci" referenced-type="gitlab.Server" label="GitLab Server"/>
    <property name="api_key" category="input" required="false" label="API Key" description="Optionally, provide an API token to override the server configuration"/>
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
    <property name="search" category="input" required="false" description="Optionally, specify a search to filter the tags.  This uses the standard GitLab tags search criteria, so consult GitLab documentation on the syntax"/>
    <property name="results_limit" category="input" kind="integer" required="true" default="100" label="Results Limit" description="Upper limit on the count of latest tags to return from the query."/>
  </type>
  <type type="gitlab.TimelineTile" label="GitLab Timeline Tile" extends="xlrelease.Tile" description="Display a timeline of commits">
    <property name="supportedScopes" kind="list_of_string" hidden="true" default="release,folder,global"/>
    <property name="uri" hidden="true" default="commits-timeline-summary.html"/>
    <property name="detailsUri" hidden="true" default="commits-detail.html"/>
    <property name="title" default="GitLab Commits Timeline" description="Tile title."/>
    <property name="gitlab_server" category="input" kind="ci" referenced-type="gitlab.Server" label="GitLab Server"/>
    <property name="api_key" category="input" required="false" label="API Key" description="Optionally, provide an API token to override the server configuration"/>
    <property name="project_id" category="input" required="true" label="Project ID" description="This is visible in the GUI and should be an integer"/>
    <property name="branch" category="input" required="false" label="Branch Name" description="If not provided, the default branch will be used"/>
    <property name="results_limit" category="input" kind="integer" required="true" default="100" label="Results Limit" description="Upper limit on the number of pull requests to return from the query."/>
  </type>
</synthetic>
